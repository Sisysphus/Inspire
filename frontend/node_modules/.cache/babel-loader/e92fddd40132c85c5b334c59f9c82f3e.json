{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamfaidy/Documents/projects/Keeps2/google-keep/frontend/src/components/Area.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { IoAddOutline } from \"react-icons/io5\";\n\nconst Area = ({\n  onAdd\n}) => {\n  _s();\n\n  const [Expand, isExpanded] = useState(false); //  We create the set note via the \"title\" & \"content\" established via the name\n\n  const [note, setNote] = useState({\n    title: \"\",\n    note_id: \"\",\n    textbody: \"\",\n    required: true\n  }, [], () => {\n    const localData = localStorage.getItem(\"note\") && this.setNote({\n      notes: JSON.parse(note)\n    });\n    return localData ? JSON.parse(localData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"note\", JSON.stringify(note));\n  }, [note]);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setNote(preValue => {\n      return { ...preValue,\n        [name]: value\n      };\n    });\n  }\n\n  const handleExpand = () => {\n    isExpanded(true);\n  };\n\n  function submitButton(event) {\n    if (note === 0) onAdd(note);\n    setNote({\n      title: \"\",\n      textbody: \"\"\n    });\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [Expand && /*#__PURE__*/_jsxDEV(\"input\", {\n        value: note.title,\n        type: \"text\",\n        placeholder: \"Title\",\n        name: \"title\",\n        onChange: handleChange,\n        className: \"btn\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          // Establish note.title via created UseState\n          className: \"btn\",\n          value: note.textbody,\n          onClick: handleExpand,\n          name: \"textbody\",\n          placeholder: \"Take a note...\",\n          onChange: handleChange,\n          rows: Expand ? 5 : 1,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitButton,\n        children: /*#__PURE__*/_jsxDEV(IoAddOutline, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Area, \"/jlhFUIPGaCyAHJgnICEgW9xrPU=\");\n\n_c = Area;\nexport default Area;\n\nvar _c;\n\n$RefreshReg$(_c, \"Area\");","map":{"version":3,"sources":["/Users/adamfaidy/Documents/projects/Keeps2/google-keep/frontend/src/components/Area.js"],"names":["React","useState","useEffect","IoAddOutline","Area","onAdd","Expand","isExpanded","note","setNote","title","note_id","textbody","required","localData","localStorage","getItem","notes","JSON","parse","setItem","stringify","handleChange","e","name","value","target","preValue","handleExpand","submitButton","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { IoAddOutline } from \"react-icons/io5\";\n\nconst Area = ({ onAdd }) => {\n  const [Expand, isExpanded] = useState(false);\n  //  We create the set note via the \"title\" & \"content\" established via the name\n  const [note, setNote] = useState(\n    {\n      title: \"\",\n      note_id: \"\",\n      textbody: \"\",\n      required: true,\n    },\n    [],\n    () => {\n      const localData =\n        localStorage.getItem(\"note\") &&\n        this.setNote({\n          notes: JSON.parse(note),\n        });\n      return localData ? JSON.parse(localData) : [];\n    }\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"note\", JSON.stringify(note));\n  }, [note]);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setNote((preValue) => {\n      return {\n        ...preValue,\n        [name]: value,\n      };\n    });\n  }\n\n  const handleExpand = () => {\n    isExpanded(true);\n  };\n\n  function submitButton(event) {\n    if (note === 0)\n    onAdd(note);\n    setNote({\n      title: \"\",\n      textbody: \"\",\n    });\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form>\n        {Expand && (\n          <input\n            value={note.title}\n            type=\"text\"\n            placeholder=\"Title\"\n            name=\"title\"\n            onChange={handleChange}\n            className=\"btn\"\n            required\n          />\n        )}\n\n        <p>\n          <textarea\n            // Establish note.title via created UseState\n            className=\"btn\"\n            value={note.textbody}\n            onClick={handleExpand}\n            name=\"textbody\"\n            placeholder=\"Take a note...\"\n            onChange={handleChange}\n            rows={Expand ? 5 : 1}\n            required\n          ></textarea>\n        </p>\n        <button onClick={submitButton}>\n          <IoAddOutline size={20} />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Area;\n"]},"metadata":{},"sourceType":"module"}