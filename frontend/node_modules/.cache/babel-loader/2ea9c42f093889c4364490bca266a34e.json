{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamfaidy/Documents/projects/Keeps2/google-keep/frontend/src/components/Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MdDelete } from \"react-icons/md\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst Note = ({\n  title,\n  textbody,\n  onDelete,\n  id,\n  onEdit\n}) => {\n  _s();\n\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newTextBody, setnewTextBody] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n\n  const noteUpdater = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: () => {\n      return onEdit = {\n        newTitle,\n        newTextBody,\n        id\n      };\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => {\n        return setNewTitle(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: textbody,\n      onChange: e => {\n        return setnewTextBody(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"editButton\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: editing ? noteUpdater : {}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Note, \"lvhtQHrspzgBWFVABg8JEg0gkvA=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/Users/adamfaidy/Documents/projects/Keeps2/google-keep/frontend/src/components/Note.js"],"names":["React","useState","MdDelete","EditIcon","Note","title","textbody","onDelete","id","onEdit","newTitle","setNewTitle","newTextBody","setnewTextBody","editing","setEditing","noteUpdater","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,EAA7B;AAAiCC,EAAAA;AAAjC,CAAD,KAA+C;AAAA;;AAC1D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMe,WAAW,gBACf;AACE,IAAA,QAAQ,EAAE,MAAM;AACd,aAAQP,MAAM,GAAG;AAAEC,QAAAA,QAAF;AAAYE,QAAAA,WAAZ;AAAyBJ,QAAAA;AAAzB,OAAjB;AACD,KAHH;AAAA,4BAKE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEH,KAFT;AAGE,MAAA,QAAQ,EAAGY,CAAD,IAAO;AACf,eAAON,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YALF,eAYE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEb,QAFT;AAGE,MAAA,QAAQ,EAAGW,CAAD,IAAO;AACf,eAAOJ,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAArB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YAZF,eAmBE;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACGL,OAAO,GAAGE,WAAH,GAAiB;AAD3B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvCD;;GAAMZ,I;;KAAAA,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { MdDelete } from \"react-icons/md\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst Note = ({ title, textbody, onDelete, id, onEdit }) => {\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newTextBody, setnewTextBody] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n\n  const noteUpdater = (\n    <form\n      onSubmit={() => {\n        return (onEdit = { newTitle, newTextBody, id });\n      }}\n    >\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => {\n          return setNewTitle(e.target.value);\n        }}\n      ></input>\n      <input\n        type=\"text\"\n        value={textbody}\n        onChange={(e) => {\n          return setnewTextBody(e.target.value);\n        }}\n      ></input>\n      <button name=\"editButton\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"note\">\n      {editing ? noteUpdater : {\n        \n      } }\n    \n    </div>\n  );\n};\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}