{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamfaidy/Documents/projects/Keeps2/google-keep/frontend/src/components/Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MdDelete } from \"react-icons/md\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst Note = ({\n  title,\n  textbody,\n  onDelete,\n  id,\n  onEdit\n}) => {\n  _s();\n\n  const [newTitle, setNewTitle] = useState(title);\n  const [newTextBody, setnewTextBody] = useState(textbody);\n  const [editing, setEditing] = useState(false);\n\n  const noteUpdater = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      setEditing(false);\n      return onEdit({\n        newTitle,\n        newTextBody,\n        id\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTitle,\n      onChange: e => {\n        return setNewTitle(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTextBody,\n      onChange: e => {\n        return setnewTextBody(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submit-button\",\n      name: \"editButton\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: editing ? noteUpdater : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: newTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: newTextBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(id),\n        children: /*#__PURE__*/_jsxDEV(MdDelete, {\n          className: \"mcdelete\",\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setEditing(true),\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          className: \"edit-icon\",\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"color\",\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Note, \"UIsN5scNEbkGbw8gWfz38OUpsYk=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/Users/adamfaidy/Documents/projects/Keeps2/google-keep/frontend/src/components/Note.js"],"names":["React","useState","MdDelete","EditIcon","Note","title","textbody","onDelete","id","onEdit","newTitle","setNewTitle","newTextBody","setnewTextBody","editing","setEditing","noteUpdater","e","preventDefault","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,EAA7B;AAAiCC,EAAAA;AAAjC,CAAD,KAA+C;AAAA;;AAC1D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACI,KAAD,CAAxC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAACK,QAAD,CAA9C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMe,WAAW,gBACf;AACE,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAON,MAAM,CAAC;AAAEC,QAAAA,QAAF;AAAYE,QAAAA,WAAZ;AAAyBJ,QAAAA;AAAzB,OAAD,CAAb;AACD,KALH;AAAA,4BAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEE,QAFT;AAGE,MAAA,QAAQ,EAAGO,CAAD,IAAO;AACf,eAAON,WAAW,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YAPF,eAcE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAER,WAFT;AAGE,MAAA,QAAQ,EAAGK,CAAD,IAAO;AACf,eAAOJ,cAAc,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YAdF,eAqBE;AAAQ,MAAA,EAAE,EAAC,eAAX;AAA2B,MAAA,IAAI,EAAC,YAAhC;AAA6C,MAAA,IAAI,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACGN,OAAO,GACNE,WADM,gBAGN;AAAA,8BACE;AAAA,kBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAML,QAAQ,CAACC,EAAD,CAA/B;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,UAApB;AAA+B,UAAA,IAAI,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMO,UAAU,CAAC,IAAD,CAA/C;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,WAApB;AAAgC,UAAA,IAAI,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApDD;;GAAMX,I;;KAAAA,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { MdDelete } from \"react-icons/md\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst Note = ({ title, textbody, onDelete, id, onEdit }) => {\n  const [newTitle, setNewTitle] = useState(title);\n  const [newTextBody, setnewTextBody] = useState(textbody);\n  const [editing, setEditing] = useState(false);\n\n  const noteUpdater = (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        setEditing(false);\n        return onEdit({ newTitle, newTextBody, id });\n      }}\n    >\n      <input\n        type=\"text\"\n        value={newTitle}\n        onChange={(e) => {\n          return setNewTitle(e.target.value);\n        }}\n      ></input>\n      <input\n        type=\"text\"\n        value={newTextBody}\n        onChange={(e) => {\n          return setnewTextBody(e.target.value);\n        }}\n      ></input>\n      <button id=\"submit-button\" name=\"editButton\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"note\">\n      {editing ? (\n        noteUpdater\n      ) : (\n        <>\n          <h3>{newTitle}</h3>\n          <p>{newTextBody}</p>\n          <button onClick={() => onDelete(id)}>\n            <MdDelete className=\"mcdelete\" size={25} />\n          </button>\n          <button type=\"button\" onClick={() => setEditing(true)}>\n            <EditIcon className=\"edit-icon\" size={25} />\n          </button>\n          <button type=\"color\">Click</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}