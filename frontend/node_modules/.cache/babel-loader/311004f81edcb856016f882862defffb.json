{"ast":null,"code":"import { fetch } from \"./csrf.js\";\nconst SET_USER = \"session/setUser\";\nconst REMOVE_USER = \"session/removeUser\";\nconst SET_NOTES = \"session/setNotes\"; // const setNotes = (notes) => ({\n//   type: SET_NOTES,\n//   payload: notes,\n// });\n\nconst setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER\n});\n\nexport const login = ({\n  credential,\n  password\n}) => async dispatch => {\n  const res = await fetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  }); // console.log(res.data);\n\n  dispatch(setUser(res.data.user)); // dispatch(setNotes(res.data.notes));\n\n  return res;\n};\nexport const restoreUser = () => async dispatch => {\n  const res = await fetch(\"/api/session\");\n  dispatch(setUser(res.data.user)); // dispatch(setNotes(res.data.notes));\n\n  return res;\n};\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password\n  } = user;\n  const response = await fetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  dispatch(setUser(response.data.user));\n  return response;\n};\nexport const logout = () => async dispatch => {\n  const response = await fetch(\"/api/session\", {\n    method: \"DELETE\"\n  });\n  dispatch(removeUser());\n  return response;\n};\nconst initialState = {\n  user: null,\n  notes: null\n};\n\nfunction reducer(state = initialState, action) {\n  let newState;\n\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state, {\n        user: action.payload\n      });\n      return newState;\n\n    case REMOVE_USER:\n      newState = Object.assign({}, state, {\n        user: null\n      });\n      return newState;\n    // case SET_NOTES:\n    //   newState = Object.assign({}, state, {\n    //     user: state.user,\n    //     notes: action.payload,\n    //   });\n    // return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/adamfaidy/Documents/projects/Keeps2/google-keep/frontend/src/store/session.js"],"names":["fetch","SET_USER","REMOVE_USER","SET_NOTES","setUser","user","type","payload","removeUser","login","credential","password","dispatch","res","method","body","JSON","stringify","data","restoreUser","signup","username","email","response","logout","initialState","notes","reducer","state","action","newState","Object","assign"],"mappings":"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","sourcesContent":["import { fetch } from \"./csrf.js\";\n\nconst SET_USER = \"session/setUser\";\nconst REMOVE_USER = \"session/removeUser\";\nconst SET_NOTES = \"session/setNotes\";\n\n// const setNotes = (notes) => ({\n//   type: SET_NOTES,\n//   payload: notes,\n// });\n\nconst setUser = (user) => ({\n  type: SET_USER,\n  payload: user,\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER,\n});\n\nexport const login =\n  ({ credential, password }) =>\n  async (dispatch) => {\n    const res = await fetch(\"/api/session\", {\n      method: \"POST\",\n      body: JSON.stringify({ credential, password }),\n    });\n    // console.log(res.data);\n    dispatch(setUser(res.data.user));\n    // dispatch(setNotes(res.data.notes));\n    return res;\n  };\n\nexport const restoreUser = () => async (dispatch) => {\n  const res = await fetch(\"/api/session\");\n  dispatch(setUser(res.data.user));\n  // dispatch(setNotes(res.data.notes));\n  return res;\n};\n\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user;\n  const response = await fetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n\n  dispatch(setUser(response.data.user));\n  return response;\n};\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetch(\"/api/session\", {\n    method: \"DELETE\",\n  });\n  dispatch(removeUser());\n  return response;\n};\n\nconst initialState = { user: null, notes: null };\n\nfunction reducer(state = initialState, action) {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state, { user: action.payload });\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state, { user: null });\n      return newState;\n    // case SET_NOTES:\n    //   newState = Object.assign({}, state, {\n    //     user: state.user,\n    //     notes: action.payload,\n    //   });\n    // return newState;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}