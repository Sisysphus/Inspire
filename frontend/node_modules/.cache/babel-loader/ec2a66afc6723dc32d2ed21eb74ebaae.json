{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamfaidy/Documents/projects/Keeps2/google-keep/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SignupFormPage from \"./components/SignupFormPage\";\nimport { fetch } from \"./store/csrf\"; // import LoginFormPage from \"./components/LoginFormPage\";\n\nimport * as sessionActions from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\nimport Header from \"./components/Header\";\nimport Area from \"./components/Area\";\nimport Note from \"./components/Note\";\nimport Count from \"./components/Count\";\nimport Footer from \"./components/Footer\";\nimport \"./index.css\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const userNotes = useSelector(state => state.session.notes);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [notes, setNotes] = useState(userNotes ? userNotes : []);\n  console.log(notes);\n  console.log(userNotes);\n  console.log(sessionUser); // useEffect(() => {\n  //   (async function () {\n  //     try {\n  //       const response = await fetch(`/api/note/${sessionUser.id}`);\n  //       console.log(response.data);\n  //       setNotes(response.data);\n  //     } catch (e) {\n  //       console.error(e);\n  //     }\n  //   })();\n  // }, []);\n\n  const addNote = async newNote => {\n    const res = await fetch(\"/api/note/\", {\n      method: \"post\",\n      body: JSON.stringify({\n        title: newNote.title,\n        textbody: newNote.textbody,\n        user_id: sessionUser.id\n      })\n    });\n    setNotes(prevValue => {\n      return [...prevValue, res.data];\n    });\n  };\n\n  const deleteNote = async id => {\n    const res = await fetch(`/api/note/${id}`, {\n      method: \"delete\"\n    });\n    setNotes(prevValue => {\n      return [...prevValue.filter(note => note.id !== id)];\n    });\n  };\n\n  const updateNote = async note => {\n    //\n    const res = await fetch(`/api/note/${note.id}`, {\n      method: \"put\",\n      body: JSON.stringify({\n        title: note.newTitle,\n        textbody: note.newTextBody,\n        user_id: sessionUser.id\n      })\n    });\n  };\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isLoaded: isLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Count, {\n        count: notes.length === 0 ? \"Inspire yourself to something creative\" : `Continue Writing notes. Is 1 enough? keep pushing!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        onAdd: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), users.map((note, index) => /*#__PURE__*/_jsxDEV(Note, {\n        id: note.id,\n        title: note.title,\n        textbody: note.textbody,\n        onDelete: deleteNote,\n        onEdit: updateNote\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(SignupFormPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"mBccN0zHIAoIA6G9wpsn/ou+h+8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adamfaidy/Documents/projects/Keeps2/google-keep/frontend/src/App.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Route","Switch","SignupFormPage","fetch","sessionActions","Navigation","Header","Area","Note","Count","Footer","App","dispatch","sessionUser","state","session","user","userNotes","notes","isLoaded","setIsLoaded","setNotes","console","log","addNote","newNote","res","method","body","JSON","stringify","title","textbody","user_id","id","prevValue","data","deleteNote","filter","note","updateNote","newTitle","newTextBody","restoreUser","then","length","users","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SignupFormPage from \"./components/SignupFormPage\";\nimport { fetch } from \"./store/csrf\";\n// import LoginFormPage from \"./components/LoginFormPage\";\nimport * as sessionActions from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\nimport Header from \"./components/Header\";\nimport Area from \"./components/Area\";\nimport Note from \"./components/Note\";\nimport Count from \"./components/Count\";\nimport Footer from \"./components/Footer\";\nimport \"./index.css\";\nfunction App() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const userNotes = useSelector((state) => state.session.notes);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [notes, setNotes] = useState(userNotes ? userNotes : []);\n  console.log(notes);\n  console.log(userNotes);\n  console.log(sessionUser);\n  // useEffect(() => {\n  //   (async function () {\n  //     try {\n  //       const response = await fetch(`/api/note/${sessionUser.id}`);\n  //       console.log(response.data);\n  //       setNotes(response.data);\n  //     } catch (e) {\n  //       console.error(e);\n  //     }\n  //   })();\n  // }, []);\n\n  const addNote = async (newNote) => {\n    const res = await fetch(\"/api/note/\", {\n      method: \"post\",\n      body: JSON.stringify({\n        title: newNote.title,\n        textbody: newNote.textbody,\n        user_id: sessionUser.id,\n      }),\n    });\n\n    setNotes((prevValue) => {\n      return [...prevValue, res.data];\n    });\n  };\n\n  const deleteNote = async (id) => {\n    const res = await fetch(`/api/note/${id}`, {\n      method: \"delete\",\n    });\n\n    setNotes((prevValue) => {\n      return [...prevValue.filter((note) => note.id !== id)];\n    });\n  };\n\n  const updateNote = async (note) => {\n    //\n    const res = await fetch(`/api/note/${note.id}`, {\n      method: \"put\",\n      body: JSON.stringify({\n        title: note.newTitle,\n        textbody: note.newTextBody,\n        user_id: sessionUser.id,\n      }),\n    });\n  };\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n        <Navigation isLoaded={isLoaded} />\n        <Count\n          count={\n            notes.length === 0\n              ? \"Inspire yourself to something creative\"\n              : `Continue Writing notes. Is 1 enough? keep pushing!`\n          }\n        />\n        <Area onAdd={addNote} />\n        {users.map((note, index) => (\n          <Note\n            key={index}\n            id={note.id}\n            title={note.title}\n            textbody={note.textbody}\n            onDelete={deleteNote}\n            onEdit={updateNote}\n          />\n        ))}\n\n        <Footer />\n      </div>\n      {isLoaded && (\n        <Switch>\n          {/* <Route path=\"/login\" >\n            <LoginFormPage />\n          </Route> */}\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}